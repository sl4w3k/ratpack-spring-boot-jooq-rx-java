/*
 * This file is generated by jOOQ.
*/
package pl.homecenter.japlace.generated.db.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import pl.homecenter.japlace.generated.db.Japlace;
import pl.homecenter.japlace.generated.db.Keys;
import pl.homecenter.japlace.generated.db.tables.records.JpPaymentsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JpPayments extends TableImpl<JpPaymentsRecord> {

    private static final long serialVersionUID = -1859440439;

    /**
     * The reference instance of <code>JAPLACE.JP_PAYMENTS</code>
     */
    public static final JpPayments JP_PAYMENTS = new JpPayments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JpPaymentsRecord> getRecordType() {
        return JpPaymentsRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpPaymentsRecord, Object> PMN_ID = createField("PMN_ID", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpPaymentsRecord, Object> PMN_VND_ID = createField("PMN_VND_ID", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpPaymentsRecord, Object> PMN_TITLE = createField("PMN_TITLE", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpPaymentsRecord, Object> PMN_AMOUNT = createField("PMN_AMOUNT", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * The column <code>JAPLACE.JP_PAYMENTS.PMN_CREATE_DATE</code>.
     */
    public final TableField<JpPaymentsRecord, Date> PMN_CREATE_DATE = createField("PMN_CREATE_DATE", org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>JAPLACE.JP_PAYMENTS.PMN_FINAL_DATE</code>.
     */
    public final TableField<JpPaymentsRecord, Date> PMN_FINAL_DATE = createField("PMN_FINAL_DATE", org.jooq.impl.SQLDataType.DATE.nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpPaymentsRecord, Object> PMN_IBAN = createField("PMN_IBAN", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpPaymentsRecord, Object> PMN_HST_ID = createField("PMN_HST_ID", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * Create a <code>JAPLACE.JP_PAYMENTS</code> table reference
     */
    public JpPayments() {
        this(DSL.name("JP_PAYMENTS"), null);
    }

    /**
     * Create an aliased <code>JAPLACE.JP_PAYMENTS</code> table reference
     */
    public JpPayments(String alias) {
        this(DSL.name(alias), JP_PAYMENTS);
    }

    /**
     * Create an aliased <code>JAPLACE.JP_PAYMENTS</code> table reference
     */
    public JpPayments(Name alias) {
        this(alias, JP_PAYMENTS);
    }

    private JpPayments(Name alias, Table<JpPaymentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private JpPayments(Name alias, Table<JpPaymentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Japlace.JAPLACE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JpPaymentsRecord> getPrimaryKey() {
        return Keys.PK_JP_PAYMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JpPaymentsRecord>> getKeys() {
        return Arrays.<UniqueKey<JpPaymentsRecord>>asList(Keys.PK_JP_PAYMENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JpPayments as(String alias) {
        return new JpPayments(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JpPayments as(Name alias) {
        return new JpPayments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JpPayments rename(String name) {
        return new JpPayments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JpPayments rename(Name name) {
        return new JpPayments(name, null);
    }
}
