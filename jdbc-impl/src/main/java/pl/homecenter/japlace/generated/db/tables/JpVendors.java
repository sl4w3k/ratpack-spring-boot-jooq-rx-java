/*
 * This file is generated by jOOQ.
*/
package pl.homecenter.japlace.generated.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import pl.homecenter.japlace.generated.db.Japlace;
import pl.homecenter.japlace.generated.db.Keys;
import pl.homecenter.japlace.generated.db.tables.records.JpVendorsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JpVendors extends TableImpl<JpVendorsRecord> {

    private static final long serialVersionUID = -1215726329;

    /**
     * The reference instance of <code>JAPLACE.JP_VENDORS</code>
     */
    public static final JpVendors JP_VENDORS = new JpVendors();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JpVendorsRecord> getRecordType() {
        return JpVendorsRecord.class;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpVendorsRecord, Object> VND_ID = createField("VND_ID", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<JpVendorsRecord, Object> VND_NAME = createField("VND_NAME", org.jooq.impl.SQLDataType.OTHER.defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.OTHER)), this, "");

    /**
     * Create a <code>JAPLACE.JP_VENDORS</code> table reference
     */
    public JpVendors() {
        this(DSL.name("JP_VENDORS"), null);
    }

    /**
     * Create an aliased <code>JAPLACE.JP_VENDORS</code> table reference
     */
    public JpVendors(String alias) {
        this(DSL.name(alias), JP_VENDORS);
    }

    /**
     * Create an aliased <code>JAPLACE.JP_VENDORS</code> table reference
     */
    public JpVendors(Name alias) {
        this(alias, JP_VENDORS);
    }

    private JpVendors(Name alias, Table<JpVendorsRecord> aliased) {
        this(alias, aliased, null);
    }

    private JpVendors(Name alias, Table<JpVendorsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Japlace.JAPLACE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JpVendorsRecord> getPrimaryKey() {
        return Keys.PK_JP_VENDORS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JpVendorsRecord>> getKeys() {
        return Arrays.<UniqueKey<JpVendorsRecord>>asList(Keys.PK_JP_VENDORS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JpVendors as(String alias) {
        return new JpVendors(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JpVendors as(Name alias) {
        return new JpVendors(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JpVendors rename(String name) {
        return new JpVendors(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JpVendors rename(Name name) {
        return new JpVendors(name, null);
    }
}
